const SHAPE_COLOURS_HEX=[6254309,15029629,16777215,16046710];class SpikeShape extends Phaser.Physics.Arcade.Sprite{constructor(scene,x,y,id,direction){super(scene,x,y).setDepth(400);scene.add.existing(this);scene.physics.add.existing(this);const rotation=0;this.setRotation(rotation);const radius=10;this.body.setCircle(radius,(this.displayWidth+radius)/2,(this.displayHeight+radius)/2);this.play("pulse");this.id=id;this.setTint(SHAPE_COLOURS_HEX[id]);this.direction=direction}update(){this.x+=.48*this.direction.x;this.y+=.48*this.direction.y;let{width,height}=this.scene.sys.game.canvas;if(this.x<-100|this.x>width+100){this.destroy()}}}class Sucker extends Phaser.Physics.Arcade.Sprite{constructor(scene,x,y){super(scene,x,y,"black-hole");scene.add.existing(this);scene.physics.add.existing(this);const radius=20;this.body.setCircle(radius,this.displayWidth/2-radius,this.displayHeight/2-radius);this.swirlPlugin=scene.plugins.get("rexswirlpipelineplugin");this.swirl=this.swirlPlugin.add(scene.cameras.main,{center:{x:x,y:y},angle:20,radius:60});this.direction=new Phaser.Math.Vector2(-1,Phaser.Math.FloatBetween(-.25,.25))}update(){this.x+=.18*this.direction.x;this.y+=.18*this.direction.y;this.scale-=2e-4;this.swirl.setCenter(this.x,this.y);this.swirl.radius=60*this.scale;this.scene.sinks[0]=this.getCenter();let{width,height}=this.scene.sys.game.canvas;if(this.x<-45|this.x>width+45|this.scale<.1){this.scene.sinks=[];this.swirlPlugin.remove(this.scene.cameras.main);this.destroy()}}}class BonusBall extends Phaser.Physics.Arcade.Sprite{constructor(scene,x,y,id){super(scene,x,y,"ball");scene.add.existing(this);scene.physics.add.existing(this);this.id=id;this.setTint(SHAPE_COLOURS_HEX[id]);const radius=10;this.body.setCircle(radius,(this.displayWidth+radius)/2,(this.displayHeight+radius)/2);this.direction=new Phaser.Math.Vector2(Phaser.Math.FloatBetween(-.25,.25),1)}update(){this.x+=.48*this.direction.x;this.y+=.48*this.direction.y;let{width,height}=this.scene.sys.game.canvas;if(this.x<-100|this.x>width+100){this.destroy()}}}export{SpikeShape,Sucker,BonusBall};import MenuScene from"./menu-scene.js";import PlayerScene from"./player-scene.js";import PromisesScene from"./promises-scene.js";var menuScene=new MenuScene;var playerScene=new PlayerScene;var promisesScene=new PromisesScene;const WIDTH=window.innerWidth;const HEIGHT=window.innerHeight;const MIN_WIDTH=36;const MIN_HEIGHT=72;var game=new Phaser.Game({type:Phaser.AUTO,backgroundColor:"dedede",dom:{createContainer:true},callbacks:{postBoot:function(game){game.domContainer.style.pointerEvents="none"}},width:WIDTH,height:HEIGHT,scale:{parent:"phaser-app",mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_HORIZONTALLY,min:{width:MIN_WIDTH,height:MIN_HEIGHT}},physics:{default:"arcade",arcade:{enableBody:true,debug:false}}});game.scene.add("PromisesScene",promisesScene);game.scene.add("PlayerScene",playerScene);game.scene.add("MenuScene",menuScene);game.scene.start("PlayerScene",{scene:"PromisesScene",title:"In-Flight Movie \nThe Assistant"});export default class MenuScene extends Phaser.Scene{constructor(){super("MenuScene")}preload(){this.load.html("instructions","assets/text/instructions.html");this.load.html("high-scores","assets/text/high-scores.html")}create(data={playerScene:Phaser,menuType:String,wasPaused:Boolean}){let{width,height}=this.sys.game.canvas;let imageWidth=this.textures.get("menu-top").getSourceImage().width;let imageScale=width/imageWidth;let backgroundTop=this.add.image(width/2,0,"menu-top").setOrigin(.5,0).setScale(imageScale).setInteractive();let backgroundMiddle=this.add.image(width/2,backgroundTop.displayHeight,"menu-middle").setOrigin(.5,0).setScale(imageScale).setInteractive();backgroundMiddle.displayHeight=height-2*backgroundTop.displayHeight;let backgroundBottom=this.add.image(width/2,backgroundTop.displayHeight+backgroundMiddle.displayHeight,"menu-top").setOrigin(.5,0).setScale(imageScale).setInteractive();backgroundBottom.flipY=true;let cancelButton=this.add.image(width-4,4,"icons","cross.png").setOrigin(1,0).setScale(.4).setInteractive();cancelButton.on("pointerdown",()=>{data.playerScene.scene.resume("MainScene");data.playerScene.unBlurScreen();if(!data.wasPaused)data.playerScene.resumeGame();if(data.playerScene.nameform)data.playerScene.nameform.setVisible(true);this.scene.stop()});let titleWords=data.menuType.split("_");let title=titleWords.map(word=>{return word.length>2?word[0].toUpperCase()+word.substring(1):word}).join(" ");this.add.bitmapText(width/2,height/10,"mont",title,36).setOrigin(.5,0);this.setBodyText(data.menuType);data.playerScene.addSocialButtons(this,10)}setBodyText(menuType){let{width,height}=this.sys.game.canvas;let lineHeight=100;switch(menuType){case"how_to_play":this.add.dom(width/2,120).createFromCache("instructions").setOrigin(.5,0);break;case"stats":this.gamesPlayedText=this.add.bitmapText(width/2,height/5+lineHeight,"mont",this.getGamesPlayedText(0),30).setOrigin(.5);this.gamesPlayedText.setCenterAlign();this.avgScoreText=this.add.bitmapText(width/2,height/5+2*lineHeight,"mont",this.getAvgScoreText(0),30).setOrigin(.5);this.avgScoreText.setCenterAlign();this.highScoreText=this.add.bitmapText(width/2,height/5+3*lineHeight,"mont",this.getHighScoreText(0),30).setOrigin(.5);this.highScoreText.setCenterAlign();this.displayScores();break;case"high_scores":this.add.dom(width/2,120).createFromCache("high-scores").setOrigin(.5,0);default:break}}displayScores(){getStats().then(stats=>{this.gamesPlayedText.text=this.getGamesPlayedText(stats["played"]);this.avgScoreText.text=this.getAvgScoreText(parseFloat(stats["average"]).toFixed(2));this.highScoreText.text=this.getHighScoreText(stats["high"])})}getGamesPlayedText(gamesPlayed){return`Times Played:\n${gamesPlayed}`}getAvgScoreText(avgScore){return`Average Score:\n${avgScore}`}getHighScoreText(highScore){return`High Score:\n${highScore}`}}export default class PlayerScene extends Phaser.Scene{constructor(){super("PlayerScene")}preload(){this.load.image("menu-top","assets/images/backgrounds/menu-top.png");this.load.image("menu-middle","assets/images/backgrounds/menu-middle.png");this.load.bitmapFont("mont",`assets/fonts/mont-heavy/mont-heavy.png`,`assets/fonts/mont-heavy/mont-heavy.xml`);this.load.bitmapFont("mont-light",`assets/fonts/mont-light/mont-light.png`,`assets/fonts/mont-light/mont-light.xml`);this.load.multiatlas("icons","assets/images/icons/icons.json","assets/images/icons");this.load.plugin("rexkawaseblurpipelineplugin","https://raw.githubusercontent.com/rexrainbow/phaser3-rex-notes/master/dist/rexkawaseblurpipelineplugin.min.js",true);this.load.atlas("particles","assets/particles/particles.png","assets/particles/particles.json");this.load.html("nameform","assets/text/nameform.html")}create(params={scene:"PromisesScene"}){if(this.sys.game.device.os.desktop){this.scale.setGameSize(380,720)}this.params=params;let{width,height}=this.sys.game.canvas;this.centre=new Phaser.Math.Vector2(width/2,height/2-50);this.sceneLoaded=false;this.songComplete=false;this.gamePaused=true;this.scoreId=Promise.resolve();this.sound.pauseOnBlur=false;this.addMenuBars();this.pauseGame();let loadingIcon=this.add.image(this.centre.x,this.centre.y,"icons","loading.png").setDepth(1001);this.loadingIconTween=this.tweens.add({targets:loadingIcon,rotation:Phaser.Math.PI2,duration:900,repeat:-1,repeatDelay:0});getStats().then(stats=>{if(stats[["average"]]>0){this.scene.launch(params["scene"],{pauseAtStart:true,firstGame:false})}else{this.scene.launch(params["scene"],{pauseAtStart:true,firstGame:true})}});this.scene.get(params["scene"]).events.on("create",function(){if(!this.sceneLoaded){this.gameScene=this.scene.get(params["scene"]);this.gameScene.pauseGame();this.gameScene.scene.pause();loadingIcon.destroy();this.loadingComplete()}},this);this.blurPlugin=this.plugins.get("rexkawaseblurpipelineplugin")}addMenuBars(){let{width,height}=this.sys.game.canvas;this.add.rectangle(0,0,width,40,0).setOrigin(0,0);let howToPlayIcon=this.add.image(0,20,"icons","question.png").setOrigin(0,.5).setScale(.5).setInteractive();let scoreIcon=this.add.image(40,20,"icons","star.png").setOrigin(0,.5).setScale(.5).setInteractive();let highScoresIcon=this.add.image(80,20,"icons","leaderboardsComplex.png").setOrigin(0,.5).setScale(.5).setInteractive();scoreIcon.on("pointerdown",()=>this.launchMenuScene("MenuScene","stats"));howToPlayIcon.on("pointerdown",()=>this.launchMenuScene("MenuScene","how_to_play"));highScoresIcon.on("pointerdown",()=>this.launchMenuScene("MenuScene","high_scores"));this.add.rectangle(0,height-40,width,40,0).setOrigin(0,0);let restartIcon=this.add.image(0,height-20,"icons","return.png").setOrigin(0,.5).setScale(.5).setInteractive();this.playIcon=this.add.image(40,height-20,"icons","right.png").setOrigin(0,.5).setScale(.5).setInteractive();let muteIcon=this.add.sprite(width,40,"icons","audioOn.png").setOrigin(1,0).setScale(.5).setInteractive().setDepth(10);this.add.circle(width,40,muteIcon.displayWidth/2,0).setOrigin(1,0).setAlpha(.75).setDepth(0);restartIcon.on("pointerdown",this.restartGame,this);this.playIcon.on("pointerdown",this.playGame,this);this.input.keyboard.on("keydown-SPACE",this.playGame,this);muteIcon.on("pointerdown",()=>{if(this.sceneLoaded){if(!this.gamePaused){if(this.gameScene.song.volume>0){this.gameScene.song.setVolume(0);muteIcon.setTexture("icons","audioOff.png");this.gameScene.updateGameScore(-20,2,false)}else{this.gameScene.song.setVolume(1);muteIcon.setTexture("icons","audioOn.png");this.gameScene.updateGameScore(20,2,false)}}}},this);this.addTime();this.addScoreText()}addTime(){let{width,height}=this.sys.game.canvas;this.playTimeText=this.add.bitmapText(width-85,height-20,"mont",this.timeToText(0),28).setOrigin(0,.5);let startX=this.playIcon.x+this.playIcon.displayWidth;let endX=this.playTimeText.x-10;this.timerWidth=endX-startX;this.add.rectangle(startX,height-20,this.timerWidth,2,6776679).setOrigin(0,.5);let playBar=this.add.rectangle(startX,height-20,this.timerWidth,15).setAlpha(.1).setOrigin(0,.5).setInteractive();playBar.on("pointerdown",function(pointer){if(this.sceneLoaded&!this.gamePaused){const playBarPercent=(startX-pointer.x)/(startX-endX);this.setSongTime(playBarPercent)}},this);this.add.rectangle(startX,height-20,2,15,16777215).setOrigin(0,.5);this.add.rectangle(endX,height-20,2,15,16777215).setOrigin(0,.5);this.timerBar=this.add.rectangle(startX,height-20,0,10,16777215).setOrigin(0,.5)}setSongTime(percent){this.gameScene.setSongPercent(percent)}timeToText(time){const minutes=Phaser.Utils.String.Pad(Math.floor(time/60),2,"0",1);const seconds=Phaser.Utils.String.Pad(Math.floor(time%60),2,"0",1);return`${minutes}:${seconds}`}addScoreText(){let{width,height}=this.sys.game.canvas;this.scoreText=this.add.bitmapText(width-20,20,"mont",this.scoreToString(0),36).setOrigin(1,.5).setDepth(1001)}updateScoreText(score){this.scoreText.text=this.scoreToString(score)}scoreToString(score){return Phaser.Utils.String.Pad(Math.round(score),4," ",1)}updateGameScore(oldScore,newScore,textColour){let{width,height}=this.sys.game.canvas;let emitter=this.particleEmitter("particles",{frame:["red","blue","white","yellow"],x:width-20-this.scoreText.width/2,y:20,scale:{start:.4,end:.1},speed:200,lifespan:1e3,blendMode:"ADD"});this.tweens.addCounter({from:oldScore,to:newScore,duration:1e3,onStart:function(){this.scoreText.setTint(textColour)}.bind(this),onUpdate:function(tween){this.updateScoreText(tween.getValue())}.bind(this),onComplete:function(){this.scoreText.setTint(16777215);emitter.explode(10,width-20-this.scoreText.width/2,20)}.bind(this)})}launchMenuScene(sceneName,menuType){if(this.nameform)this.nameform.setVisible(false);this.scene.launch(sceneName,{playerScene:this,menuType:menuType,wasPaused:this.gamePaused});if(!this.gamePaused)this.pauseGame();this.blurScreen()}blurScreen(){this.blurPlugin.add(this.cameras.main,{blur:4,quality:3,pixelWidth:1,pixelHeight:1})}unBlurScreen(){this.blurPlugin.remove(this.cameras.main)}loadingComplete(){this.sceneLoaded=true;this.loadingIconTween.remove();this.playButton=this.add.image(this.centre.x,this.centre.y,"icons","right.png").setOrigin(.5).setInteractive().setDepth(1001);this.playButton.on("pointerdown",()=>{this.resumeGame()},this)}playGame(){if(!this.scene.isActive("MenuScene")){if(!this.songComplete){if(this.gamePaused){this.resumeGame()}else{this.pauseGame()}}else{this.restartGame()}}}pauseGame(){this.gamePaused=true;this.playIcon.setTexture("icons","right.png");let{width,height}=this.sys.game.canvas;this.pauseScreen=this.add.rectangle(0,40,width,height-80,0).setOrigin(0,0).setDepth(1e3).setInteractive();this.pauseScreen.alpha=.6;this.pauseScreenDetail=this.add.circle(this.centre.x,this.centre.y,80,0).setOrigin(.5).setDepth(1001);this.pauseScreenDetail.setStrokeStyle(4,16777215);this.pauseText=this.add.bitmapText(this.centre.x,this.centre.y-190,"mont",this.params["title"],30).setOrigin(.5,0).setCenterAlign().setDepth(1001);this.addSocialButtons(this);if(this.sceneLoaded){this.gameScene.pauseGame();this.gameScene.scene.pause();if(this.songComplete){this.saveScore(this.gameScene.getTotalScore()).then(response=>this.gameOverText(response["id"]));this.playButton=this.add.image(this.centre.x,this.centre.y,"icons","return.png").setOrigin(.5).setInteractive().setDepth(1001);this.playButton.on("pointerdown",()=>{this.restartGame()},this)}else{this.playButton=this.add.image(this.centre.x,this.centre.y,"icons","right.png").setOrigin(.5).setInteractive().setDepth(1001);this.playButton.on("pointerdown",this.resumeGame,this)}}}async gameOverText(scoreId){const totalScore=this.gameScene.getTotalScore();const highScores=await getHighScores();const targetScore=highScores[highScores.length-1]["score"];let text;if(totalScore>targetScore){text=`You scored ${totalScore} points.\nThat's a new high score!\nWhat do we call you?`;this.victoryText=this.add.bitmapText(this.centre.x,this.centre.y+100,"mont-light",text,30).setOrigin(.5,0).setCenterAlign().setDepth(1001).setDropShadow(1,1,0);this.submitName(this.victoryText.height,scoreId,totalScore)}else{text=this.getVictoryText(totalScore);this.victoryText=this.add.bitmapText(this.centre.x,this.centre.y+100,"mont-light",text,30).setOrigin(.5,0).setCenterAlign().setDepth(1001).setDropShadow(1,1,0)}}submitName(textHeight,scoreId,totalScore){let{width,height}=this.sys.game.canvas;this.nameform=this.add.dom(width/2,this.centre.y+115+textHeight).createFromCache("nameform").setOrigin(.5,0);this.nameform.addListener("click");this.nameform.on("click",function(event){if(event.target.name==="submitButton"){var inputText=this.nameform.getChildByName("nameField");if(inputText.value!==""){console.log(inputText.value);this.profanityTest(inputText.value).then(function(response){if(response.containsprofanity){inputText.classList.add("error");let warningBackground=this.add.rectangle(width/2,this.centre.y+textHeight+80,width,50,0).setOrigin(.5).setDepth(2e3);let warningText=this.add.bitmapText(width/2,this.centre.y+textHeight+80,"mont","That's inappropriate!",30).setOrigin(.5).setDepth(2e3).setTint(9244174);let tween=this.tweens.addCounter({from:1,to:0,delay:1e3,duration:2500,onUpdate:function(tween){const value=tween.getValue();if(!this.gamePaused){tween.remove();warningBackground.destroy();warningText.destroy()}warningBackground.setAlpha(value);warningText.setAlpha(value)}.bind(this),onComplete:function(){warningBackground.destroy();warningText.destroy()}});setTimeout(function(){inputText.classList.remove("error")},300)}else{updateScore(inputText.value,scoreId);this.nameform.destroy();this.victoryText.text=`You scored ${totalScore} points.\nThat's a new high score!`}}.bind(this)).catch(function(err){console.log("Error: \n",err)})}}}.bind(this))}profanityTest(text){return get("/profanity-test",{text:text})}getVictoryText(score,target){if(score>250){return`You scored ${score} points.\nWow!!!!`}else if(score>200){return`You scored ${score} points.\nThat's awe inspiring!`}else if(score>150){return`You scored ${score} points.\nThat's amazing!`}else if(score>100){return`You scored ${score} points.\nGood job`}else if(score>50){return`You scored ${score} points.\nNice`}else if(score>20){return`You scored ${score} points.\nHave another go?`}else if(score>0){return`You scored ${score} points.\nIt's a start`}else if(score==0){return`You scored ${score} points.\nAre you still there?`}else if(score<0){return`You scored ${score} points.\nAt least you made\nit to the end!`}}addSocialButtons(scene,bottomHeight=50){let{width,height}=this.sys.game.canvas;let iconWidth=60;scene.instagramButton=scene.add.image(width-10,height-bottomHeight,"icons","instagram.png").setScale(.75).setOrigin(1,1).setInteractive().setDepth(1001);scene.twitterButton=scene.add.image(width-iconWidth-10,height-bottomHeight,"icons","twitter.png").setScale(.75).setOrigin(1,1).setInteractive().setDepth(1001);scene.spotifyButton=scene.add.image(width-2*iconWidth-10,height-bottomHeight,"icons","spotify.png").setScale(.75).setOrigin(1,1).setInteractive().setDepth(1001);scene.instagramButton.on("pointerdown",()=>{this.openExternalLink("https://www.instagram.com/inflightmovie_music/")},this);scene.twitterButton.on("pointerdown",()=>{this.openExternalLink("https://twitter.com/_InFlightMovie_/")},this);scene.spotifyButton.on("pointerdown",()=>{this.openExternalLink("https://open.spotify.com/artist/7BB6MfkRIoGy4hLCgUrNFk")},this)}openExternalLink(url){let s=window.open(url,"_blank");if(s&&s.focus){s.focus()}else if(!s){window.location.href=url}}resumeGame(){if(this.sceneLoaded){this.playIcon.setTexture("icons","pause.png");this.gamePaused=false;this.gameScene.scene.resume();this.gameScene.resumeGame();this.pauseScreen.destroy();this.pauseScreenDetail.destroy();this.playButton.destroy();this.pauseText.destroy();if(this.songComplete){this.victoryText.destroy();if(this.nameform){this.nameform.destroy()}}this.instagramButton.destroy();this.twitterButton.destroy();this.spotifyButton.destroy()}}restartGame(){if(this.sceneLoaded){if(this.gamePaused)this.resumeGame();this.gameScene.song.stop();this.songComplete=false;const muteSong=!(this.gameScene.song.volume>0);this.gameScene.scene.restart({pauseAtStart:false,muteSong:muteSong});this.updateScoreText(0)}}async endGame(){this.songComplete=true;this.pauseGame()}async saveScore(score){getStats().then(response=>{let currentPlayed=parseInt(response["played"]);let newAvg=(currentPlayed*parseFloat(response["average"])+score)/(currentPlayed+1);let newHigh=Math.max(parseInt(response["high"]),score);setScoreCookie({user:response["user"],played:currentPlayed+1,average:newAvg,high:newHigh})});return getUser().then(response=>postScore(response,score)).catch(error=>console.log("Error:",error))}particleEmitter(particleSprite,config){var particles=this.add.particles(particleSprite);particles.setDepth(2e3);return particles.createEmitter(config)}updatePlayTime(time,percent){this.playTimeText.text=this.timeToText(time);this.timerBar.width=percent*this.timerWidth}update(){}}const SHAPE_COLOURS_HEX=[6254309,15029629,16777215,16046710];import{MysteriousShapeFull,MysteriousShapeHollow}from"./shapes.js";import{SpikeShape,Sucker,BonusBall}from"./extra-shapes.js";import{ShapeContainer}from"./shape-container.js";export default class PromisesScene extends Phaser.Scene{constructor(){super("PromisesScene")}preload(){this.load.image("background","assets/images/backgrounds/background.png");this.load.image("light","assets/images/backgrounds/light.png");this.load.plugin("rexswirlpipelineplugin","https://raw.githubusercontent.com/rexrainbow/phaser3-rex-notes/master/dist/rexswirlpipelineplugin.min.js",true);this.load.audio("promises","assets/audio/promises.mp3",{stream:true});this.load.image("black-hole","assets/sprites/black-hole.png");this.load.image("ball","assets/sprites/ball.png");this.load.atlas("star","assets/sprites/star.png","assets/sprites/star.json")}create(params={pauseAtStart:true,muteSong:false,firstGame:false}){this.input.setDefaultCursor("url(assets/cursors/hand.cur), pointer");if(this.sys.game.device.os.desktop){this.scale.setGameSize(380,720)}let{width,height}=this.sys.game.canvas;this.origin=new Phaser.Math.Vector2(width/2,height/2-50);this.sinks=[];this.setUpShapes();this.setUpDrag();if(params["firstGame"]){this.displayTutorialText()}this.initialSpawn();this.addBackground();this.scores=[0];this.scoreTimes=[0];this.fixedScore=0;this.playerScene=this.scene.get("PlayerScene");this.song=this.sound.add("promises");this.song.on("complete",function(){this.playerScene.endGame()},this);this.song.play();if(params["muteSong"]){this.song.setVolume(0);this.updateGameScore(-20,2,false)}this.spawnAngle=0;this.spawnIndex=0;this.spawnTimer=this.time.addEvent({delay:1678,loop:true,callback:this.spawnShape,callbackScope:this},this)}displayTutorialText(){let{width,height}=this.sys.game.canvas;let tutorialText=this.add.bitmapText(width/2,120,"mont","You can move\nthese shapes!",26).setCenterAlign().setOrigin(.5).setDepth(2e3).setTint("k");let textBackground=this.add.rectangle(width/2,120,tutorialText.width+20,tutorialText.height,15658734).setAlpha(.8).setOrigin(.5).setDepth(1999);this.time.addEvent({delay:5e3,loop:false,callback:function(){this.updateTutorialText(tutorialText,textBackground)},callbackScope:this},this)}updateTutorialText(text,background){text.text="Connect four shapes\nof the same colour\nto score points!";background.width=text.width+20;background.height=text.height;background.setOrigin(.5);this.time.addEvent({delay:5e3,loop:false,callback:function(){text.text="Tap on the ?\nfor more info";background.width=text.width+20;background.height=text.height;background.setOrigin(.5);this.removeTutorialText(text,background)},callbackScope:this},this)}removeTutorialText(text,background){this.time.addEvent({delay:5e3,loop:false,callback:function(){text.destroy();background.destroy()},callbackScope:this},this)}setUpShapes(){this.anims.create({key:"pulse",frames:this.anims.generateFrameNames("star",{prefix:"star_",end:3,zeroPad:0}),frameRate:4,repeat:-1,yoyo:true});this.shapes=this.add.group();this.shapes.add(this.physics.add.group({classType:MysteriousShapeFull,runChildUpdate:true}));this.shapes.add(this.physics.add.group({classType:MysteriousShapeHollow,runChildUpdate:true}));this.spikeShapes=this.physics.add.group({classType:SpikeShape,runChildUpdate:true,maxSize:14});this.suckerShapes=this.physics.add.group({classType:Sucker,runChildUpdate:true,maxSize:2});this.bonusBalls=this.physics.add.group({classType:BonusBall,runChildUpdate:true,maxSize:1});this.physics.add.overlap(this.shapes,this.spikeShapes,function(shape,spikeShape){if(shape.id==spikeShape.id){shape.parent.destroyShapes([shape])}}.bind(this));this.physics.add.overlap(this.shapes,this.suckerShapes,function(shape,suckerShape){shape.parent.destroyShapes([shape],suckerShape.getCenter())}.bind(this));this.physics.add.overlap(this.shapes,this.shapes,function(shape1,shape2){shape1.updateCollision();shape2.updateCollision();this.mergeShapes(shape1,shape2)}.bind(this));this.shapeContainers=[];this.spikesSpawned1=false;this.spikesSpawned2=false;this.spikesSpawned3=false;this.bonusBallSpawned=false;this.blackHoleSpawned=false}setUpDrag(){let previousDragX=0;let previousDragY=0;this.dragVelocity=new Phaser.Math.Vector2;this.canDrag=true;this.input.on("dragstart",function(pointer,obj){this.input.setDefaultCursor("url(assets/cursors/hand-dark.cur), pointer");this.canDrag=true;obj.parent.pauseUpdate();obj.parent.updateSeparations(obj);obj.parent.moveToTop();this.draggedShape=obj},this);this.input.on("drag",function(pointer,obj,dragX,dragY){if(this.canDrag){this.dragVelocity.x=dragX-previousDragX;this.dragVelocity.y=dragY-previousDragY;previousDragX=dragX;previousDragY=dragY;obj.parent.container.iterate(function(shape){shape.setPosition(dragX+shape.separation.x,dragY+shape.separation.y)})}},this);this.input.on("dragend",function(pointer,obj){this.input.setDefaultCursor("url(assets/cursors/hand.cur), pointer");obj.parent.unpauseUpdate();obj.parent.calculateDirection()},this)}addBackground(){this.background=new Background(this)}setSongPercent(percent){const songTime=this.percentToSeconds(percent);if(songTime<this.song.seek){this.revertScores(songTime)}if(songTime<59){this.blackHoleSpawned=false;this.bonusBallSpawned=false;this.spikesSpawned1=false;this.spikesSpawned2=false;this.spikesSpawned3=false}else if(songTime<100){this.blackHoleSpawned=false;this.bonusBallSpawned=false;this.spikesSpawned2=false;this.spikesSpawned3=false}else if(songTime<113){this.blackHoleSpawned=false;this.bonusBallSpawned=false;this.spikesSpawned3=false}else if(songTime<153){this.bonusBallSpawned=false;this.spikesSpawned3=false}else if(songTime<176){this.spikesSpawned3=false}this.song.seek=songTime}revertScores(songTime){const index=this.scoreTimes.findIndex(n=>n>songTime);if(index>=0){this.scores.length=index;this.scoreTimes.length=index;let playerScene=this.scene.get("PlayerScene");playerScene.updateScoreText(this.scores[this.scores.length-1]+this.fixedScore)}}percentToSeconds(percent){return percent*this.song.totalDuration}getSongPercent(){return this.song.seek/this.song.totalDuration}mergeShapes(shape1,shape2){if(!shape1.parent.container.exists(shape2)&&shape1.canCollide&&shape2.canCollide){if(shape1.parent.container.exists(this.draggedShape)){this.moveContainer(shape1,shape2);shape1.parent.merge(shape1,shape2);shape1.parent.mergeEffect(shape1,shape2)}else{this.moveContainer(shape2,shape1);shape2.parent.merge(shape2,shape1);shape2.parent.mergeEffect(shape2,shape1)}}}moveContainer(moveShape,collideShape){let moveShapeWorldPos=moveShape.getWorldPos();let collideShapeWorldPos=collideShape.getWorldPos();let xOffset=0;let yOffset=0;if(this.dragVelocity.x>0){xOffset=moveShapeWorldPos.x+moveShapeWorldPos.width/2-(collideShapeWorldPos.x-collideShapeWorldPos.width/2)}else{xOffset=moveShapeWorldPos.x-moveShapeWorldPos.width/2-(collideShapeWorldPos.x+collideShapeWorldPos.width/2)}if(this.dragVelocity.y>0){yOffset=moveShapeWorldPos.y+moveShapeWorldPos.height/2-(collideShapeWorldPos.y-collideShapeWorldPos.height/2)}else{yOffset=moveShapeWorldPos.y-moveShapeWorldPos.height/2-(collideShapeWorldPos.y+collideShapeWorldPos.height/2)}if(Math.abs(xOffset)<Math.abs(yOffset)){collideShape.parent.container.x+=xOffset}else{collideShape.parent.container.y+=yOffset}}pauseGame(){this.song.pause()}resumeGame(){this.song.resume()}spawnBlackHole(){let{width,height}=this.sys.game.canvas;this.suckerShapes.get(width+40,this.origin.y+Phaser.Math.FloatBetween(-height/3,height/3))}spawnSpikeShapes(num){let{width,height}=this.sys.game.canvas;this.background.setLightTint();for(var i=0;i<num;i++){let id=Phaser.Math.Between(0,3);let dir=new Phaser.Math.Vector2(-1,Phaser.Math.FloatBetween(-.25,.25));this.spikeShapes.get(width+Phaser.Math.FloatBetween(20,60),(i+Phaser.Math.FloatBetween(.05,.95))*height/3,id,dir.normalize())}for(var i=0;i<num;i++){let id=Phaser.Math.Between(0,3);let dir=new Phaser.Math.Vector2(1,Phaser.Math.FloatBetween(-.25,.25));this.spikeShapes.get(-Phaser.Math.FloatBetween(20,60),(i+Phaser.Math.FloatBetween(.05,.95))*height/3,id,dir.normalize())}}spawnBonusBall(){let{width,height}=this.sys.game.canvas;let id=Phaser.Math.Between(0,3);this.bonusBalls.get(this.origin.x+Phaser.Math.FloatBetween(-width/4,width/4),-20,id)}spawnShape(){let direction=new Phaser.Math.Vector2;const angle=this.spawnIndex*Phaser.Math.PI2/4+Phaser.Math.FloatBetween(-.4,.4);direction.setToPolar(angle,4);this.spawnAngle+=Phaser.Math.PI2/2+Phaser.Math.PI2/4+Phaser.Math.FloatBetween(-.4,.4);direction.setToPolar(this.spawnAngle,4);this.spawn(this.origin.x+direction.x,this.origin.y+direction.y,true);this.spawnIndex=(this.spawnIndex+1)%4}initialSpawn(){this.spawn(this.origin.x+100,this.origin.y-100);this.spawn(this.origin.x+120,this.origin.y+100);this.spawn(this.origin.x-190,this.origin.y+100);this.spawn(this.origin.x-160,this.origin.y-180);this.spawn(this.origin.x+50,this.origin.y+80);this.spawn(this.origin.x-16,this.origin.y-280);this.spawn(this.origin.x+50,this.origin.y-80);this.spawn(this.origin.x-80,this.origin.y-20)}spawn(x,y,fadeIn=false){let id=Phaser.Math.Between(0,3);let scale=Phaser.Math.FloatBetween(.16,.2);let prob=Phaser.Math.FloatBetween(0,1);let shapeGroup;if(prob>.15){shapeGroup=this.shapes.getChildren()[0]}else{shapeGroup=this.shapes.getChildren()[1]}let shape=shapeGroup.get(id,fadeIn);this.shapeContainers.push(new ShapeContainer(this,x,y,scale,shape,this.spawnIndex))}update(time,delta){this.playerScene.updatePlayTime(this.song.seek,this.getSongPercent());for(var shapeContainer of this.shapeContainers){shapeContainer.update()}if(this.song.seek>54&this.song.seek<59&!this.spikesSpawned1){this.spikesSpawned1=true;this.spawnSpikeShapes(2)}else if(this.song.seek>95&this.song.seek<100&!this.spikesSpawned2){this.spikesSpawned2=true;this.spawnSpikeShapes(3)}else if(this.song.seek>108&this.song.seek<113&!this.blackHoleSpawned){this.blackHoleSpawned=true;this.spawnBlackHole()}else if(this.song.seek>148&this.song.seek<153&!this.bonusBallSpawned){this.bonusBallSpawned=true}else if(this.song.seek>171&this.song.seek<176&!this.spikesSpawned3){this.spikesSpawned3=true;this.spawnSpikeShapes(4)}}updateGameScore(score,id,timeDependent=true){const currentScore=this.getTotalScore();const newScore=currentScore+score;if(timeDependent){this.scores.push(this.scores[this.scores.length-1]+score);this.scoreTimes.push(this.song.seek)}else{this.fixedScore+=score}let playerScene=this.scene.get("PlayerScene");playerScene.updateGameScore(currentScore,newScore,SHAPE_COLOURS_HEX[id])}getTotalScore(){return this.scores[this.scores.length-1]+this.fixedScore}}class Background{constructor(scene){this.scene=scene;scene.add.image(scene.origin.x,scene.origin.y,"background").setOrigin(.5);this.light=scene.add.image(scene.origin.x,scene.origin.y,"light")}setLightTint(){const orig=[255,255,255];const tint=[175,11,19];const originalTint=Phaser.Display.Color.ValueToColor(16777215);const newTint=Phaser.Display.Color.ValueToColor(0);this.scene.spawnTimer.delay=this.scene.spawnTimer.delay/2;console.log(this.scene.spawnTimer.delay);this.scene.tweens.addCounter({from:0,to:180,duration:6500,yoyo:true,onUpdate:function(tween){const value=tween.getValue();if(value<=100){const colourObject=Phaser.Display.Color.Interpolate.ColorWithColor(originalTint,newTint,100,value);this.light.setTint(Phaser.Display.Color.GetColor(colourObject.r,colourObject.g,colourObject.b))}}.bind(this),onComplete:function(){this.scene.spawnTimer.delay=2*this.scene.spawnTimer.delay}.bind(this)})}update(time,delta){}}import{ShapeNetwork}from"./shape-network.js";class ShapeContainer{constructor(scene,x,y,scale,shape,depthLevel=0,fadeIn=false){this.scene=scene;this.xSpeed=.28;this.ySpeed=.32;this.container=scene.add.container(x,y,[]);scene.add.existing(this.container);this.container.scaleX=scale;this.container.scaleY=scale;if(shape)this.addShape(shape);this.shapeNetwork=new ShapeNetwork(shape);this.runUpdate=true;this.calculateDirection();this.hasHitBoundary=false;this.graphics=this.scene.add.graphics();this.graphics.lineStyle(5,16711935,1);this.setDepthLevel(depthLevel)}setSpeed(xSpeed,ySpeed){if(ySpeed){this.xSpeed=xSpeed;this.ySpeed=ySpeed}else{this.xSpeed=xSpeed;this.ySpeed=xSpeed}}update(){if(this.runUpdate){let{width,height}=this.scene.sys.game.canvas;if(this.container.scaleX<=.5){this.container.scaleX*=1.00135;this.container.scaleY*=1.00135}this.container.x+=this.xSpeed*this.direction.x;this.container.y+=this.ySpeed*this.direction.y;if(this.scene.sinks.length>0){this.calculateDirection()}let centroid=this.getCentroid();if(centroid.x<-160|centroid.x>width+160|centroid.y<-160|centroid.y>height+160){if(!this.hasHitBoundary){this.hasHitBoundary=true;this.hitBoundary()}}}}hitBoundary(){this.scene.tweens.addCounter({from:1,to:0,duration:800,ease:"Power2",yoyo:false,onUpdate:function(tween){const value=tween.getValue();this.setAlphas(value)}.bind(this),onComplete:function(){this.remove()}.bind(this)})}setAlphas(value){this.container.setAlpha(value);this.container.iterate(function(shape){shape.alpha=value})}pauseUpdate(){this.runUpdate=false}unpauseUpdate(){this.runUpdate=true}merge(moveShape,collideShape){console.log("Merging shapes");let collideObj=collideShape.parent;collideObj.container.each(function(shape){this.addShapeFromContainer(collideObj.container,shape)},this);this.updateSeparations(this.scene.draggedShape);this.updateDepth();if(collideObj.shapeNetwork.nodes.length>0){this.shapeNetwork.merge(collideObj.shapeNetwork.nodes,[[moveShape,collideShape]])}collideObj.remove();this.checkClusters()}addShape(shape){this.container.add(shape);shape.setParent(this);shape.addEdges();this.calculateDirection()}addShapeFromContainer(container,shape){let shapeWorldPos=this.getShapeWorldPos(container,shape);let newContainerX=(shapeWorldPos.x-this.container.x)/this.container.scaleX;let newContainerY=(shapeWorldPos.y-this.container.y)/this.container.scaleX;shape.setPosition(newContainerX,newContainerY);let shapeWorldScale=this.getShapeWorldScale(container,shape);shape.setScale(shapeWorldScale/this.container.scaleX);container.remove(shape);this.addShape(shape)}updateSeparations(dragShape){if(dragShape){this.container.iterate(function(shape){shape.separation=new Phaser.Math.Vector2(shape.x-dragShape.x,shape.y-dragShape.y)})}}updateDepth(){this.container.each(function(shape){let{x,y,width,height}=shape.getWorldPos();shape.setDepth(50*(200-width)/200+this.container.depth-52);shape.updateDepth(50*(200-width)/200+this.container.depth-52,this.container.depth)},this)}moveToTop(){this.setDepthLevel(4)}setDepthLevel(level){this.container.setDepth(52+52*level);this.updateDepth()}checkClusters(minSize=4,id=-1){let scoreClusters=this.shapeNetwork.findClusters(minSize,id);scoreClusters.forEach(cluster=>{let score=0;let id;cluster.forEach(nodeIndex=>{let shape=this.shapeNetwork.nodes[nodeIndex].shape;this.container.remove(shape);score+=shape.score();if(!id)id=shape.id;this.setShapeWorldPos(this.container,shape);shape.remove()});this.scene.updateGameScore(score,id)});scoreClusters.forEach(cluster=>{this.shapeNetwork.dropNodes(cluster)});if(scoreClusters.length>0){let subNetworks=this.shapeNetwork.findSubNetworks();this.breakApart(subNetworks)}}breakApart(subNetworks){if(this.container.exists(this.scene.draggedShape)){this.scene.canDrag=false}subNetworks.forEach(function(subNetwork){let shape=this.shapeNetwork.nodes[subNetwork[0]].shape;let shapeWorldpos=shape.getWorldPos();let newContainer=new ShapeContainer(this.scene,shapeWorldpos.x,shapeWorldpos.y,1);let newNodes=[];subNetwork.forEach(function(nodeIndex){newContainer.addShapeFromContainer(this.container,this.shapeNetwork.nodes[nodeIndex].shape);newNodes.push(this.shapeNetwork.nodes[nodeIndex])}.bind(this));newContainer.shapeNetwork.setNodes(newNodes);newContainer.shapeNetwork.remapConnections(subNetwork);newContainer.updateDepth();this.scene.shapeContainers.push(newContainer)}.bind(this));this.remove()}mergeEffect(ContainerShape,collisionShape){console.log("Merge effect");if(ContainerShape.id==0){if(collisionShape.id==1){this.xSpeed*=10;this.ySpeed*=10}else if(collisionShape.id==2){let dir=new Phaser.Math.Vector2(Phaser.Math.FloatBetween(-.25,.25),Phaser.Math.FloatBetween(-.25,.25));const pos=collisionShape.getWorldPos();this.scene.spikeShapes.get(pos.x,pos.y,3,dir.normalize())}else if(collisionShape.id==3){const initialScale=this.container.scaleX;this.scene.tweens.add({targets:this.container,scaleX:.5*initialScale,scaleY:.5*initialScale,duration:1e3})}}else if(ContainerShape.id==1){if(collisionShape.id==0){this.xSpeed*=10;this.ySpeed*=10}else if(collisionShape.id==2){this.destroyShapes([ContainerShape,collisionShape])}else if(collisionShape.id==3){ContainerShape.changeId(3);this.checkClusters()}}else if(ContainerShape.id==2){if(collisionShape.id==0){let dir=new Phaser.Math.Vector2(Phaser.Math.FloatBetween(-.25,.25),Phaser.Math.FloatBetween(-.25,.25));const pos=collisionShape.getWorldPos();this.scene.spikeShapes.get(pos.x,pos.y,3,dir.normalize())}else if(collisionShape.id==1){this.destroyShapes([ContainerShape,collisionShape])}else if(collisionShape.id==3){let subNetworks=this.shapeNetwork.findClusters(1);this.breakApart(subNetworks)}}else{if(collisionShape.id==0){const initialScale=this.container.scaleX;this.scene.tweens.add({targets:this.container,scaleX:.5*initialScale,scaleY:.5*initialScale,duration:1e3})}else if(collisionShape.id==1){collisionShape.changeId(3);this.checkClusters()}else if(collisionShape.id==2){let subNetworks=this.shapeNetwork.findClusters(1);this.breakApart(subNetworks)}}}destroyShapes(shapes,target){console.log("Destroying shapes");let nodesToDrop=[];shapes.forEach(function(shape){nodesToDrop.push(this.shapeNetwork.getNodeIndex(shape));this.container.remove(shape);this.setShapeWorldPos(this.container,shape);shape.remove(target)}.bind(this));this.shapeNetwork.dropNodes(nodesToDrop);let subNetworks=this.shapeNetwork.findSubNetworks();this.breakApart(subNetworks)}getShapeWorldPos(container,shape){let worldX=container.scaleX*shape.x+container.x;let worldY=container.scaleX*shape.y+container.y;return new Phaser.Math.Vector2(worldX,worldY)}getShapeWorldScale(container,shape){return shape.scaleX*container.scaleX}setShapeWorldPos(container,shape){let shapeWorldPos=this.getShapeWorldPos(container,shape);shape.setPosition(shapeWorldPos.x,shapeWorldPos.y);let shapeWorldScale=this.getShapeWorldScale(container,shape);shape.setScale(shapeWorldScale)}calculateDirection(){const originAngle=this.angleToTarget(this.scene.origin);let direction=new Phaser.Math.Vector2(-Math.cos(originAngle),-Math.sin(originAngle));for(var target of this.scene.sinks){const targetAngle=this.angleToTarget(target);direction.add(new Phaser.Math.Vector2(Math.cos(targetAngle)/2,Math.sin(targetAngle)/2))}this.direction=direction.normalize()}setDirection(direction){this.direction=direction}angleToTarget(target){return Phaser.Math.Angle.BetweenPoints(this.getCentroid(),target)}distanceToTarget(target){return Phaser.Math.Distance.BetweenPoints(this.getCentroid(),target)}getCentroid(){let centroid=new Phaser.Math.Vector2;this.container.iterate(function(shape){centroid=centroid.add(this.getShapeWorldPos(this.container,shape))},this);centroid=centroid.scale(1/this.container.length);return centroid}remove(){this.container.iterate(function(shape){shape.clearGraphics()});const index=this.scene.shapeContainers.indexOf(this);if(index>-1){this.scene.shapeContainers.splice(index,1)}this.runUpdate=false;this.container.destroy()}drawNetwork(){this.graphics.clear();this.graphics.lineStyle(5,16711935,1).setDepth(2e3);this.nodeIdText.forEach(function(nodeIdText){nodeIdText.destroy()});this.nodeIdText=[];this.shapeNetwork.nodes.forEach(function(node,i){let nodePos=node.shape.getWorldPos();let nodeIdText=this.scene.add.bitmapText(nodePos.x,nodePos.y,"mont",i,30).setOrigin(.5).setDepth(2e3).setTint("k");this.nodeIdText.push(nodeIdText);node.connections.forEach(function(connection){let connectionPos=this.shapeNetwork.nodes[connection].shape.getWorldPos();this.graphics.strokeLineShape({x1:nodePos.x,y1:nodePos.y,x2:connectionPos.x,y2:connectionPos.y})}.bind(this))}.bind(this))}}export{ShapeContainer};class ShapeNetwork{constructor(shape){if(shape){this.nodes=[new Node(shape)]}else{this.nodes=[]}}setNodes(nodes){this.nodes=nodes}remapConnections(connections){let connectionsMap=Object.assign({},...connections.map((x,i)=>({[x]:i})));this.nodes.forEach(function(node){node.connections=node.connections.reduce(function(result,connection){if(connections.includes(connection)){return result.concat(connectionsMap[connection])}return result},[])})}merge(nodes,connectedShapes){nodes.forEach(function(node){node.connections=node.connections.map(connection=>connection+this.nodes.length)}.bind(this));this.nodes=this.nodes.concat(nodes);connectedShapes.forEach(shapes=>{let node0=this.getNode(shapes[0]);let node1=this.getNode(shapes[1]);node0.connections.push(this.nodes.indexOf(node1));node1.connections.push(this.nodes.indexOf(node0))})}getNode(shape){for(var node of this.nodes){if(node.shape==shape){return node}}}getNodeIndex(shape){return this.nodes.indexOf(this.getNode(shape))}dropNodes(nodes){let nodesIndex=[...Array(this.nodes.length).keys()];let connections=nodesIndex.filter(x=>!nodes.includes(x));this.nodes=this.nodes.filter(function(node,index){return!nodes.includes(index)});this.remapConnections(connections)}findSubNetworks(){let visited=new Array(this.nodes.length).fill(false);let subNetworks=[];this.nodes.forEach(function(node,i){if(!visited[i]){let cluster=[i];this.checkConnections(node,i,visited,cluster,false);subNetworks.push(cluster.sort((a,b)=>a-b))}}.bind(this));return subNetworks}findClusters(minSize=4,id=-1){console.log("Checking for clusters");let visited=new Array(this.nodes.length).fill(false);let allClusters=[];this.nodes.forEach(function(node,i){if(id>=0&node.shape.id!=id){return}if(!visited[i]){let cluster=[i];this.checkConnections(node,i,visited,cluster,true);if(cluster.length>=minSize){allClusters.push(cluster)}}}.bind(this));return allClusters}checkConnections(node,i,visited,cluster,checkId){visited[i]=true;node.connections.forEach(function(nodeIndex){if(!visited[nodeIndex]){if(checkId&node.shape.id==this.nodes[nodeIndex].shape.id){cluster.push(nodeIndex);this.checkConnections(this.nodes[nodeIndex],nodeIndex,visited,cluster,checkId)}else if(!checkId){cluster.push(nodeIndex);this.checkConnections(this.nodes[nodeIndex],nodeIndex,visited,cluster,checkId)}}}.bind(this))}}class Node{constructor(shape){this.shape=shape;this.connections=[]}}export{ShapeNetwork};const SHAPE_COLOURS_HEX=[6254309,15029629,16777215,16046710];const SHAPE_COLOURS_HEX_DARK=[3225975,7810113,8684676,8286525];class MysteriousShape extends Phaser.GameObjects.Polygon{constructor(scene,points,id,fadeIn){super(scene,0,0,points,SHAPE_COLOURS_HEX[id],1).setInteractive().setOrigin(.5).setScale(.01);scene.add.existing(this);scene.physics.add.existing(this);this.body.setSize(this.width*.98,this.height*.98);this.scene=scene;this.id=id;this.setColourIds(id);let shapeDepth=Phaser.Math.RND.between(5,15);this.shapeDepth=0;this.mainEdgeGraphics=scene.add.graphics();this.vertEdgeGraphics=scene.add.graphics();this.horizEdgeGraphics=scene.add.graphics();this.mainEdgeGraphics.lineStyle(4,0,0).setDepth(95);this.vertEdgeGraphics.fillStyle(0,0);this.horizEdgeGraphics.fillStyle(0,0);this.separation=new Phaser.Math.Vector2(0,0);this.setDraggable();this.inContainer=false;this.canCollide=false;this.isSpawning=true;if(fadeIn){scene.tweens.addCounter({from:0,to:1,duration:900,onUpdate:function(tween){const value=tween.getValue();this.fadeIn(this,value,shapeDepth)}.bind(this),onComplete:function(){this.isSpawning=false}.bind(this)})}else{this.isSpawning=false;this.shapeDepth=shapeDepth;this.setScale(1)}this.lastCollisionTime=0;this.beingRemoved=false}setColourIds(id){let colourIds=[0,1,2,3];colourIds.splice(id,1);this.vertEdgeId=Phaser.Math.RND.pick(colourIds);const index=colourIds.indexOf(this.vertEdgeId);colourIds.splice(index,1);this.horizEdgeId=Phaser.Math.RND.pick(colourIds)}fadeIn(image,tweenValue,shapeDepth){image.setScale(tweenValue);this.shapeDepth=tweenValue*shapeDepth}setDraggable(){this.scene.input.setDraggable(this)}setParent(parent){this.inContainer=true;this.parent=parent}changeId(newId){const originalColour=Phaser.Display.Color.ValueToColor(SHAPE_COLOURS_HEX[this.id]);const newColour=Phaser.Display.Color.ValueToColor(SHAPE_COLOURS_HEX[newId]);this.scene.tweens.addCounter({from:0,to:100,duration:400,onUpdate:function(tween){const value=tween.getValue();const colourObject=Phaser.Display.Color.Interpolate.ColorWithColor(originalColour,newColour,100,value);this.setFillStyle(Phaser.Display.Color.GetColor(colourObject.r,colourObject.g,colourObject.b))}.bind(this),onComplete:function(){this.id=newId;this.parent.checkClusters()}.bind(this)})}update(time,delta){this.addEdges();if(time-this.lastCollisionTime>250&&!this.canCollide&&!this.isSpawning){this.canCollide=true}}updateCollision(){if(!this.beingRemoved){this.lastCollisionTime=this.scene.time.now}}updateDepth(shapeDepth,mainDepth){this.setDepth(shapeDepth);this.mainEdgeGraphics.setDepth(mainDepth-1)}clearGraphics(){this.mainEdgeGraphics.clear();this.vertEdgeGraphics.clear();this.horizEdgeGraphics.clear()}getWorldPos(){if(this.inContainer){let worldX=this.parent.container.scaleX*this.x+this.parent.container.x;let worldY=this.parent.container.scaleX*this.y+this.parent.container.y;let worldWidth=this.parent.container.scaleX*this.displayWidth;let worldHeight=this.parent.container.scaleX*this.displayHeight;return{x:worldX,y:worldY,width:worldWidth,height:worldHeight}}else{return{x:this.x,y:this.y,width:this.displayWidth,height:this.displayHeight}}}getWorldScale(){if(this.inContainer){return this.scaleX*this.parent.container.scaleX}else{return this.scaleX}}vertEdgePoints(x,yTop,yBottom){let angleTop=Math.atan2(x-this.scene.origin.x,yTop-this.scene.origin.y);let angleBottom=Math.atan2(x-this.scene.origin.x,yBottom-this.scene.origin.y);return[x,yBottom,x,yTop,x-this.shapeDepth*Math.sin(angleTop),yTop-this.shapeDepth*Math.cos(angleTop),x-this.shapeDepth*Math.sin(angleBottom),yBottom-this.shapeDepth*Math.cos(angleBottom)]}horizEdgePoints(y,xLeft,xRight){let angleLeft=Math.atan2(xLeft-this.scene.origin.x,y-this.scene.origin.y);let angleRight=Math.atan2(xRight-this.scene.origin.x,y-this.scene.origin.y);return[xRight,y,xLeft,y,xLeft-this.shapeDepth*Math.sin(angleLeft),y-this.shapeDepth*Math.cos(angleLeft),xRight-this.shapeDepth*Math.sin(angleRight),y-this.shapeDepth*Math.cos(angleRight)]}setPoints(obj,objGraphics,points){obj.setTo(points);objGraphics.fillPoints(obj.points,true);objGraphics.strokePoints(obj.points,true)}score(){let shapeScore=Math.ceil(Math.sqrt(this.getArea())/50);let{x,y,width,height}=this.getWorldPos();const frames=["blue","red","white","yellow"];let playerScene=this.scene.scene.get("PlayerScene");let gameCanvas=this.scene.sys.game.canvas;let emitter=playerScene.particleEmitter("particles",{frame:frames[this.id],moveToX:gameCanvas.width-20-playerScene.scoreText.width/2,moveToY:20,angle:{start:0,end:360,steps:32},quantity:10,speed:{min:60,max:100},scale:{start:.4,end:.1},lifespan:600,on:false});emitter.emitParticleAt(x,y);return shapeScore}remove(target){if(!this.beingRemoved){this.beingRemoved=true;this.body.setEnable(false);this.disableInteractive();this.inContainer=false;const shapeScale=this.getWorldScale();var particles=this.scene.add.particles("particles");if(target){let emitter=particles.createEmitter({frame:["squares_0","squares_1","squares_2","squares_3","squares_4","squares_5"],moveToX:target.x,moveToY:target.y,angle:{min:0,max:360},quantity:4,speed:{min:60,max:180},scale:{start:4*shapeScale,end:0},alpha:{start:1,end:0},lifespan:600,on:false});emitter.setTint(SHAPE_COLOURS_HEX[this.id]);emitter.emitParticleAt(this.x,this.y)}else{let emitter=particles.createEmitter({frame:["squares_0","squares_1","squares_2","squares_3","squares_4","squares_5"],angle:{min:0,max:360},speed:{min:60,max:180},lifespan:900,alpha:{start:1,end:0},scale:{start:4*shapeScale,end:.5*shapeScale},on:false});emitter.setTint(SHAPE_COLOURS_HEX[this.id]);emitter.explode(4,this.x,this.y)}this.clearGraphics();this.destroy()}}}class MysteriousShapeHollow extends MysteriousShape{constructor(scene,id,fadeIn){let rectWidth=Phaser.Math.RND.between(180,260);let rectHeight=Phaser.Math.RND.between(180,260);let rectInnerWidthPercent=Phaser.Math.FloatBetween(.4,.6);let rectInnerHeightPercent=Phaser.Math.FloatBetween(.4,.6);let rectInnerWidth=rectInnerWidthPercent*rectWidth;let rectInnerHeight=rectInnerHeightPercent*rectHeight;let points=[0,rectHeight,rectWidth,rectHeight,rectWidth,0,0,0,0,rectHeight,(rectWidth-rectInnerWidth)/2,(rectHeight-rectInnerHeight)/2,rectInnerWidth+(rectWidth-rectInnerWidth)/2,(rectHeight-rectInnerHeight)/2,rectInnerWidth+(rectWidth-rectInnerWidth)/2,rectInnerHeight+(rectHeight-rectInnerHeight)/2,(rectWidth-rectInnerWidth)/2,rectInnerHeight+(rectHeight-rectInnerHeight)/2,(rectWidth-rectInnerWidth)/2,(rectHeight-rectInnerHeight)/2];super(scene,points,id,fadeIn);this.mainEdgeOuter=new Phaser.Geom.Polygon([]);this.mainEdgeInner=new Phaser.Geom.Polygon([]);this.vertEdgeOuter=new Phaser.Geom.Polygon([]);this.vertEdgeInner=new Phaser.Geom.Polygon([]);this.horizEdgeOuter=new Phaser.Geom.Polygon([]);this.horizEdgeInner=new Phaser.Geom.Polygon([]);this.rectInnerWidthPercent=rectInnerWidthPercent;this.rectInnerHeightPercent=rectInnerHeightPercent}addEdges(){this.clearGraphics();let{x,y,width,height}=this.getWorldPos();this.mainEdgeGraphics.lineStyle(4,0,this.alpha);this.vertEdgeGraphics.fillStyle(SHAPE_COLOURS_HEX_DARK[this.vertEdgeId],this.alpha);this.vertEdgeGraphics.lineStyle(2,0,this.alpha);this.horizEdgeGraphics.fillStyle(SHAPE_COLOURS_HEX_DARK[this.horizEdgeId],this.alpha);this.horizEdgeGraphics.lineStyle(2,0,this.alpha);let pointsOuter;let pointsInner;let xLeftOuter=x-width/2-1;let xLeftInner=x-this.rectInnerWidthPercent*width/2-1;let xRightOuter=x+width/2+1;let xRightInner=x+this.rectInnerWidthPercent*width/2+1;let yTopOuter=y-height/2-1;let yTopInner=y-this.rectInnerHeightPercent*height/2-1;let yBottomOuter=y+height/2+1;let yBottomInner=y+this.rectInnerHeightPercent*height/2+1;if(x>this.scene.origin.x){pointsOuter=this.vertEdgePoints(xLeftOuter,yTopOuter,yBottomOuter);pointsInner=this.vertEdgePoints(xRightInner,yTopInner,yBottomInner)}else{pointsOuter=this.vertEdgePoints(xRightOuter,yTopOuter,yBottomOuter);pointsInner=this.vertEdgePoints(xLeftInner,yTopInner,yBottomInner)}this.setPoints(this.vertEdgeOuter,this.vertEdgeGraphics,pointsOuter);this.setPoints(this.vertEdgeInner,this.vertEdgeGraphics,pointsInner);if(y>this.scene.origin.y){pointsOuter=this.horizEdgePoints(yTopOuter,xLeftOuter,xRightOuter);pointsInner=this.horizEdgePoints(yBottomInner,xLeftInner,xRightInner)}else{pointsOuter=this.horizEdgePoints(yBottomOuter,xLeftOuter,xRightOuter);pointsInner=this.horizEdgePoints(yTopInner,xLeftInner,xRightInner)}this.setPoints(this.horizEdgeOuter,this.horizEdgeGraphics,pointsOuter);this.setPoints(this.horizEdgeInner,this.horizEdgeGraphics,pointsInner);pointsOuter=[x+width/2,y+height/2,x-width/2,y+height/2,x-width/2,y-height/2,x+width/2,y-height/2];this.mainEdgeOuter.setTo(pointsOuter);this.mainEdgeGraphics.strokePoints(this.mainEdgeOuter.points,true);pointsInner=[x+this.rectInnerWidthPercent*width/2,y+this.rectInnerHeightPercent*height/2,x-this.rectInnerWidthPercent*width/2,y+this.rectInnerHeightPercent*height/2,x-this.rectInnerWidthPercent*width/2,y-this.rectInnerHeightPercent*height/2,x+this.rectInnerWidthPercent*width/2,y-this.rectInnerHeightPercent*height/2];this.mainEdgeInner.setTo(pointsInner);this.mainEdgeGraphics.strokePoints(this.mainEdgeInner.points,true);let angle=Math.atan2(x-this.scene.origin.x,y-this.scene.origin.y);if(angle>-Phaser.Math.PI2/8&angle<Phaser.Math.PI2/8|(angle>3*Phaser.Math.PI2/8|angle<-3*Phaser.Math.PI2/8)){this.vertEdgeGraphics.setDepth(this.depth-1);this.horizEdgeGraphics.setDepth(this.depth)}else{this.vertEdgeGraphics.setDepth(this.depth);this.horizEdgeGraphics.setDepth(this.depth-1)}}getArea(){let{x,y,width,height}=this.getWorldPos();let area=width*height;return area*(1-this.rectInnerWidthPercent*this.rectInnerHeightPercent)}}class MysteriousShapeFull extends MysteriousShape{constructor(scene,id,fadeIn){let rectWidth=Phaser.Math.RND.between(180,260);let rectHeight=Phaser.Math.RND.between(180,260);let points=[0,rectHeight,rectWidth,rectHeight,rectWidth,0,0,0];super(scene,points,id,fadeIn);this.mainEdgeOuter=new Phaser.Geom.Polygon([]);this.vertEdgeOuter=new Phaser.Geom.Polygon([]);this.horizEdgeOuter=new Phaser.Geom.Polygon([])}addEdges(){this.clearGraphics();let{x,y,width,height}=this.getWorldPos();this.mainEdgeGraphics.lineStyle(4,0,this.alpha);this.vertEdgeGraphics.fillStyle(SHAPE_COLOURS_HEX_DARK[this.vertEdgeId],this.alpha);this.vertEdgeGraphics.lineStyle(2,0,this.alpha);this.horizEdgeGraphics.fillStyle(SHAPE_COLOURS_HEX_DARK[this.horizEdgeId],this.alpha);this.horizEdgeGraphics.lineStyle(2,0,this.alpha);let pointsOuter;let xLeftOuter=x-width/2-1;let xRightOuter=x+width/2+1;let yTopOuter=y-height/2-1;let yBottomOuter=y+height/2+1;if(x>this.scene.origin.x){pointsOuter=this.vertEdgePoints(xLeftOuter,yTopOuter,yBottomOuter)}else{pointsOuter=this.vertEdgePoints(xRightOuter,yTopOuter,yBottomOuter)}this.setPoints(this.vertEdgeOuter,this.vertEdgeGraphics,pointsOuter);if(y>this.scene.origin.y){pointsOuter=this.horizEdgePoints(yTopOuter,xLeftOuter,xRightOuter)}else{pointsOuter=this.horizEdgePoints(yBottomOuter,xLeftOuter,xRightOuter)}this.setPoints(this.horizEdgeOuter,this.horizEdgeGraphics,pointsOuter);pointsOuter=[x+width/2,y+height/2,x-width/2,y+height/2,x-width/2,y-height/2,x+width/2,y-height/2];this.mainEdgeOuter.setTo(pointsOuter);this.mainEdgeGraphics.strokePoints(this.mainEdgeOuter.points,true);let angle=Math.atan2(x-this.scene.origin.x,y-this.scene.origin.y);if(angle>-Phaser.Math.PI2/8&angle<Phaser.Math.PI2/8|(angle>3*Phaser.Math.PI2/8|angle<-3*Phaser.Math.PI2/8)){this.vertEdgeGraphics.setDepth(this.depth-1);this.horizEdgeGraphics.setDepth(this.depth)}else{this.vertEdgeGraphics.setDepth(this.depth);this.horizEdgeGraphics.setDepth(this.depth-1)}}getArea(){let{x,y,width,height}=this.getWorldPos();return width*height}}export{MysteriousShape,MysteriousShapeFull,MysteriousShapeHollow};